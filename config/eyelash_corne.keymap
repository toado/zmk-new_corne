#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    behaviors {
        td-mac-copy-paste:

        td-mac-copy-paste:

        td-mac-copy-paste:
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    td_mac_copy_paste: td_mac_copy_paste {
        compatible = "zmk,behavior-tap-dance";
        label = "TD_MAC_COPY_PASTE";
        #binding-cells = <0>;
        bindings = <&macro_command_copy>, <&macro_command_v>;
    };

    td_win_copy_paste: td_win_copy_paste {
        compatible = "zmk,behavior-tap-dance";
        label = "TD_WIN_COPY_PASTE";
        #binding-cells = <0>;
        bindings = <&macro_ctrl_c>, <&macro_ctrl_v>;
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <1 15 29>;
        };

        left_round_bracket {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 4>;
        };

        right_round_bracket {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 9>;
        };

        left_square_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <32 31>;
        };

        right_square_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <37 38>;
        };

        left_curly_bracket {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <16 17>;
        };

        right_curly_bracket {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <23 24>;
        };

        less_than {
            bindings = <&kp LESS_THAN>;
            key-positions = <31 30 32>;
        };

        greater_than {
            bindings = <&kp GREATER_THAN>;
            key-positions = <37 38 39>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <4 8>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <17 23>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <44 45>;
        };

        asterik {
            bindings = <&kp ASTERISK>;
            key-positions = <3 9>;
        };

        forwardslash {
            bindings = <&kp SLASH>;
            key-positions = <16 24>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <15 25>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <2 3>;
        };

        vim-colon {
            bindings = <&kp COLON>;
            key-positions = <25 24>;
        };

        vim-dollar-leading-key {
            bindings = <&kp DOLLAR>;
            key-positions = <39 38>;
        };

        mac-copy-paste {
            bindings = <&td_mac_copy_paste>;
            key-positions = <30 31>;
            layers = <7>;
        };

        undo {
            bindings = <&kp C_AC_UNDO>;
            key-positions = <29 30>;
        };

        redo {
            bindings = <&kp C_AC_REDO>;
            key-positions = <29 30 31>;
        };

        win-copy-paste {
            bindings = <&td_win_copy_paste>;
            key-positions = <30 31>;
            layers = <7>;
        };
    };

    macros {
        macro_command_copy: macro_command_c {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_COMMAND &kp C>;

            label = "MACRO_CTRL_KEY";
        };

        macro_ctrl_c: macro_ctrl_c {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LCTRL &kp C>;

            label = "MACRO_CTRL_KEY";
        };

        macro_command_v: macro_command_v {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_COMMAND &kp V>;

            label = "MACRO_COMMAND_V";
        };

        macro_ctrl_v: macro_ctrl_v {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LCTRL &kp V>;

            label = "MACRO_CTRL_V";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac_qwerty_layer {
            display-name = "mac";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E     &kp R  &kp T                             &kp C_VOLUME_UP               &kp Y        &kp U        &kp I      &kp O    &kp P          &kp BACKSPACE
&kp RCTRL       &kp A  &kp S  &kp D     &kp F  &kp G                 &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp H        &kp J        &kp K      &kp L    &kp SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &none                &kp C_VOL_DN                  &kp N        &kp M        &kp COMMA  &kp DOT  &kp FSLH       &kp ESC
                              &kp LGUI  &mo 3  &lt 4 SPACE                                                     &lt 1 ENTER  &lt 2 GRAVE  &kp RALT
            >;
        };

        number_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp ASTERISK  &kp N7  &kp N8  &kp N9        &kp PLUS                     &trans          &none   &none         &none          &none      &none            &trans
&trans  &kp SLASH     &kp N4  &kp N5  &kp NUMBER_6  &kp MINUS            &trans  &trans  &trans  &none   &kp LEFT_GUI  &kp RIGHT_ALT  &kp RCTRL  &kp RIGHT_SHIFT  &none
&trans  &kp NUMBER_0  &kp N1  &kp N2  &kp N3        &kp PERIOD  &none            &trans          &none   &none         &none          &none      &none            &none
                              &trans  &none         &trans                                       &trans  &trans        &trans
            >;
        };

        symbol_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &none  &kp AMPERSAND    &kp ASTERISK  &kp PIPE   &none                     &trans          &none   &kp PLUS      &kp MINUS      &kp EQUAL  &none            &trans
&trans  &none  &kp DOLLAR       &kp PERCENT   &kp CARET  &none             &trans  &trans  &trans  &none   &kp LEFT_GUI  &kp RIGHT_ALT  &kp RCTRL  &kp RIGHT_SHIFT  &none
&trans  &none  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH   &none   &trans            &trans          &none   &none         &none          &none      &none            &none
                                &trans        &trans     &trans                                    &trans  &trans        &trans
            >;
        };

        nav_layer {
            bindings = <
&none  &none           &none      &none         &none         &none                    &trans          &none   &none     &kp UP_ARROW  &none   &none      &trans
&none  &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI  &none            &trans  &trans  &trans  &none   &kp LEFT  &kp DOWN      &kp UP  &kp RIGHT  &none
&none  &none           &none      &none         &none         &none   &none            &trans          &none   &none     &none         &none   &none      &none
                                  &trans        &none         &trans                                   &trans  &trans    &none
            >;

            label = "nav";
        };

        fn_layer {
            bindings = <
&rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &kp F7  &kp F8  &kp F9  &kp F12                  &tog 5             &bt BT_PRV    &bt BT_NXT    &none             &none         &none         &kp C_VOLUME_UP
&rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &kp F4  &kp F5  &kp F6  &kp F11           &none  &bt BT_CLR  &to 0  &none         &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT    &none         &kp C_VOLUME_DOWN
&rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &kp F1  &kp F2  &kp F3  &kp F10  &none           &to 7              &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &kp C_MUTE
                                          &none   &none   &none                                       &none         &none         &none
            >;

            label = "fn";
        };

        gameL1 {
            bindings = <
&kp ESCAPE     &kp Y             &kp Q  &kp W         &kp E  &kp R                      &none         &none  &none  &none  &none  &none  &none
&kp TAB        &kp LEFT_SHIFT    &kp A  &kp S         &kp D  &kp F               &none  &none  &to 0  &none  &none  &none  &none  &none  &none
&kp RIGHT_ALT  &kp LEFT_CONTROL  &none  &none         &none  &none      &none           &to 7         &none  &none  &none  &none  &none  &none
                                        &kp LEFT_ALT  &mo 6  &kp SPACE                                &none  &none  &none
            >;

            label = "game-1";
        };

        gameL2 {
            bindings = <
&none  &none  &none         &trans        &none         &none                         &none         &none  &none  &none  &none  &none  &none
&none  &none  &trans        &trans        &trans        &none                  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &none           &none         &none  &none  &none  &none  &none  &none
                            &none         &none         &none                                       &none  &none  &none
            >;

            label = "game-2";
        };

        windows_qwerty_layout {
            display-name = "winQWERTY";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E         &kp R  &kp T                             &kp C_VOLUME_UP               &kp Y        &kp U        &kp I      &kp O    &kp P          &kp BACKSPACE
&kp RCTRL       &kp A  &kp S  &kp D         &kp F  &kp G                 &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp H        &kp J        &kp K      &kp L    &kp SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C         &kp V  &kp B        &none                &kp C_VOL_DN                  &kp N        &kp M        &kp COMMA  &kp DOT  &kp FSLH       &kp ESC
                              &kp LA(LGUI)  &mo 3  &lt 4 SPACE                                                     &lt 3 ENTER  &lt 2 GRAVE  &kp RALT
            >;
        };
    };
};
